{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Farm HPC","text":"<p>Farm is a high performance computing (HPC) cluster for the College of Agricultral and Environmental Sciences at UC Davis.  Designed for both research and teaching, it is a significant campus resource primarily for CPU and RAM-based computing, with a wide selection of centrally-managed software available for research in genetics, proteomics, and related bioinformatics pipelines, weather and environmental modeling, fluid and particle simulations, geographic information system (GIS) software, and more.</p>"},{"location":"#administration","title":"Administration","text":"<p>Farm is maintained by the HPC Core Facility. Software installation and support requests should be directed to farm-hpc@ucdavis.edu. </p>"},{"location":"#using-this-documentation","title":"Using This Documentation","text":"<p>Before contacting Farm support, first try searching this documentation.  This site provides information on accessing and interacting with the cluster, an overview of available software ecosystems, and tutorials for commonly used software and access patterns. </p> <p>This site is written in markdown using MkDocs with the Material for MkDocs theme.  If you would like to contribute, you may fork our repo  and submit a pull request .</p>"},{"location":"use-cases/","title":"What farm can be used for","text":"<p>A short list:</p> <ul> <li>Running large data analyses and simulations in R and Python</li> <li>Storing and analyzing large files (GBs to TBs)</li> <li>Using GPUs</li> <li>Using software through the Linux command</li> </ul>"},{"location":"guides/","title":"User guides","text":""},{"location":"guides/command-line/","title":"Using and installing command line software","text":"<p>Refs: - installing new software in a conda environment - creating a conda environment </p>"},{"location":"guides/files/","title":"Viewing and uploading files","text":"<p>https://ondemand.farm.hpc.ucdavis.edu</p> <p>Files tab; Upload/ download.</p> <p>RStudio and JupyterLab interfaces.</p> <p>ssh/scp/sftp</p>"},{"location":"guides/jupyter/","title":"Starting a JupyterLab server","text":"<p>https://ondemand.farm.hpc.ucdavis.edu/</p> <p>Setting: - Account - Partition - Number of cores - Amount of memory - R version - Number of hours - working directory</p> <p>Refs: - using your own version of Python by creating a conda environment and installing your own kernel</p>"},{"location":"guides/python/","title":"Installing your own Python packages","text":"<ul> <li>Using/listing already installed software</li> <li>Installing custom packages in your own account</li> <li>Recommended: installing R packages in a custom conda environment</li> </ul> <p>Refs: - using your own version of Python by creating a conda environment </p>"},{"location":"guides/r-stats/","title":"Installing your own R packages","text":"<ul> <li>Using/listing already installed software</li> <li>Installing custom packages in your own account</li> <li>Recommended: installing R packages in a custom conda environment</li> </ul> <p>Refs: - using your own version of R by creating a conda environment </p>"},{"location":"guides/rstudio/","title":"Starting RStudio Server","text":"<p>https://ondemand.farm.hpc.ucdavis.edu/</p> <p>Setting: - Account - Partition - Number of cores - Amount of memory - Conda environment (optional) - R version - Number of hours - working directory</p> <p>Refs: - using your own version of R by creating a conda environment </p>"},{"location":"guides/signing-up/","title":"Signing up for farm","text":"<p>https://hippo.ucdavis.edu/Farm/create</p> <ul> <li>\"who is sponsoring your account\"</li> <li>\"who is your supervising PI\"</li> </ul> <p>Note: right now you need an SSH key, but in the future you may not. Ref: generating and using an ssh key.</p>"},{"location":"reference/","title":"Reference Material and Tutorials","text":""},{"location":"reference/conda/","title":"Creating a conda/mamba environment","text":"<p>conda and mamba are software environment management commands that let you install and execute software in your own account without any special access. With conda/mamba you can:</p> <ul> <li>install your own command-line software</li> <li>install specific versions of R and Python, as well as Python and R packages</li> <li>create \"clean\" environments that contain only a specific set of software</li> <li>\"pin\" versions of software to ensure reproducibility</li> </ul> <p>Most data science software is available via conda.</p> <p>conda and mamba are available on farm via the <code>module</code> command. The following will enable both the <code>conda</code> and <code>mamba</code> commands: <pre><code>module load mamba\n</code></pre></p> <p>Conda is the simplest way to use your own installation of R and R packages with RStudio Server, and Python and Python packages with JupyterLab. See below for details!</p> <p>References and tutorials:</p> <ul> <li>Installing software on remote computers with conda/mamba - from GGG 298/Tools for Data Intensive Research, WQ 2023/2024.</li> </ul>"},{"location":"reference/conda/#creating-a-conda-environment-for-rstudio-server","title":"Creating a conda environment for RStudio Server","text":"<p>If you want to run RStudio via Open OnDemand with a specific version of R and install your own packages in RStudio, you can do that with conda by creating a conda environment that contains the <code>r-base</code> package from conda-forge. This will provide the <code>R</code> command. You can also install any additional packages you are interested in using, e.g. <code>dplyr</code> via the <code>r-dplyr</code> package.</p> <p>For example, if you run this on the command line, this command: <pre><code>mamba create -y -n my-r-env r-base=4.2.3 r-dplyr\n</code></pre> will create a conda environment named <code>my-r-env</code> that contains R v4.2.3 along with a compatible version of dplyr.</p> <p>To run RStudio with this version of R, specify <code>my-r-env</code> in the conda environment configuration when starting RStudio via Open OnDemand.</p> <p>Note that this environment is entirely isolated from others! So you need to install everything you are going to use in RStudio in this conda environment, even if it's installed elsewhere in your account. You can do so by installing it with conda, or you can install packages directly with <code>install.packages()</code> or your usual R installation mechanisms.</p>"},{"location":"reference/conda/#creating-a-conda-environment-for-jupyterlab","title":"Creating a conda environment for JupyterLab","text":"<p>If you want to run your own Python version, with its own package installs, in JupyterLab via Open OnDemand, you'll need to install your own Python \"kernel\". This can be done with conda quite easily!</p> <p>For example, the following commands will create a conda environment with Python v3.12, and install it as a Jupyter kernel: <pre><code>mamba create -n py312 -y python=3.12 ipykernel\nmamba activate py312\npython -m ipykernel install --user --name py312\n</code></pre></p> <p>To use this version of Python in JupyterLab, select the <code>py312</code> kernel when starting a notebook, or select the kernel from the Kernel ... Change Kernel menu.</p> <p>Note that this environment is entirely isolated from others! So you need to install everything you are going to use in Jupyter in this conda environment, even if it's installed elsewhere in your account. You can do so by installing it with conda/mamba, or you can install packages via your usual Python installation mechanisms (e.g. <code>python -m pip</code>).  You'll need to run the install commands in the <code>py312</code> conda environment.</p>"},{"location":"reference/ssh-keys/","title":"Generating and using an ssh key","text":"<p>https://hpc.ucdavis.edu/faq#ssh-key</p>"}]}